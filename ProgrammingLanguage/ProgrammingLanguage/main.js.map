{"version":3,"sources":["./src/app/components/project-overview/project-overview.component.ts","./src/app/components/project-overview/project-overview.component.html","./src/app/components/frameworks/frameworks.component.ts","./src/app/components/frameworks/frameworks.component.html","./src/environments/environment.ts","./src/app/components/addlanguagedialog/addlanguagedialog.component.ts","./src/app/components/addlanguagedialog/addlanguagedialog.component.html","./src/app/components/programminglanguages/programminglanguages.component.ts","./src/app/components/programminglanguages/programminglanguages.component.html","./src/app/services/login.service.ts","./src/app/components/details/details.component.html","./src/app/components/details/details.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/services/guard-service.service.ts","./src/app/app.module.ts","./src/app/components/profile/Profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/add-language/add-language.component.ts","./src/app/components/add-language/add-language.component.html","./src/app/components/add-language/snackbar.html","./src/app/services/programming-service.service.ts","./src/app/components/welcomepage/welcomepage.component.html","./src/app/components/welcomepage/welcomepage.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-project-overview',\r\n  templateUrl: './project-overview.component.html',\r\n  styleUrls: ['./project-overview.component.css']\r\n})\r\nexport class ProjectOverviewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-frameworks',\r\n  templateUrl: './frameworks.component.html',\r\n  styleUrls: ['./frameworks.component.css']\r\n})\r\nexport class FrameworksComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  \r\n\r\n}\r\n","<body>\r\n    <mat-tab-group>\r\n        <mat-tab class=\"test\" label=\"Visual Studio\">\r\n            <div><img src=\"https://upload.wikimedia.org/wikipedia/en/8/86/Visual_Studio_2013_EN.png\"\r\n                    alt=\"Visual Studio IDE\">\r\n                <img src=\"https://pluralsight2.imgix.net/paths/images/visualstudio-2019-62bfdf4c9e.png\"\r\n                    alt=\"Visual Studio Logo\">\r\n            </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Visual Studio Code\">\r\n            <div><img src=\"https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png\"\r\n                alt=\"Visual Studio Code IDE\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Visual_Studio_Code_1.35_icon.svg/1200px-Visual_Studio_Code_1.35_icon.svg.png\"\r\n                alt=\"Visual Studio Code Logo\">\r\n        </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Webstorm\">\r\n            <div><img src=\"https://www.jetbrains.com/webstorm/img/screenshots/webstorm-main.png\"\r\n                alt=\"WebStorm IDE\">\r\n            <img src=\"https://resources.jetbrains.com/storage/products/webstorm/img/meta/webstorm_logo_300x300.png\"\r\n                alt=\"WebStorm Logo\">\r\n        </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Atom\">\r\n            <div><img src=\"https://cdn.thenewstack.io/media/2017/09/4937dc18-atomideui-1024x768.jpg\"\r\n                alt=\"Atom IDE\">\r\n            <img src=\"https://seeklogo.com/images/A/atom-logo-19BD90FF87-seeklogo.com.png\"\r\n                alt=\"Atom Logo\">\r\n        </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Eclipse\">\r\n            <div><img src=\"https://www.eclipse.org/pdt/img/shot5-min.png\"\r\n                alt=\"Eclipse IDE\">\r\n            <img src=\"https://www.nicepng.com/png/detail/264-2648074_eclipse-logo-png-transparent-eclipse-ide.png\"\r\n                alt=\"Eclipse Logo\">\r\n        </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"NetBeans\">\r\n            <div><img src=\"https://pbs.twimg.com/media/EoQUb-WXIAEq2d1.jpg\"\r\n                alt=\"NetBeans IDE\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/98/Apache_NetBeans_Logo.svg\"\r\n                alt=\"NetBeans Logo\">\r\n        </div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCJ2V6cXL7HBC8N45o_cZOpCM2pFhP8SMA\",\r\n    authDomain: \"programming-languages-61090.firebaseapp.com\",\r\n    projectId: \"programming-languages-61090\",\r\n    storageBucket: \"programming-languages-61090.appspot.com\",\r\n    messagingSenderId: \"65380774393\",\r\n    appId: \"1:65380774393:web:195f3de9528fbdeee9cd28\",\r\n    measurementId: \"G-EFW5SHY4H8\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-addlanguagedialog',\r\n  templateUrl: './addlanguagedialog.component.html',\r\n  styleUrls: ['./addlanguagedialog.component.css']\r\n})\r\nexport class AddlanguagedialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title></h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <h1>Thanks for submitting to the database!</h1>\r\n    <p>Down below you´ll have to confirm your submission</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>Cancel</button>\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Confirm Submission</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { ProgrammingServiceService } from '../../services/programming-service.service';\r\nimport { CProgLanguages } from 'src/model/CProgLanguages';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport {MatTableDataSource} from '@angular/material/table'; \r\n\r\n@Component({\r\n  selector: 'app-programminglanguages',\r\n  templateUrl: './programminglanguages.component.html',\r\n  styleUrls: ['./programminglanguages.component.css']\r\n})\r\nexport class ProgramminglanguagesComponent implements OnInit {\r\n\r\n  proglanguages: CProgLanguages[];\r\n  isLoggedIn: Boolean;\r\n\r\n  constructor(private af: AngularFirestore, private progservice: ProgrammingServiceService, private appComponent: AppComponent) {\r\n    this.isLoggedIn = appComponent.isLoggedIn;\r\n  }\r\n\r\n  dataSource = new MatTableDataSource;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.progservice.getPlayer().subscribe(p => {\r\n      this.proglanguages = p;\r\n      this.dataSource = new MatTableDataSource(this.proglanguages);\r\n    });\r\n  }\r\n\r\n  displayedColumns: string[] = ['ProgrammingLanguages'];\r\n \r\n  removeFromDB(){\r\n    \r\n  }\r\n\r\n  verifyUser() {\r\n    if (!(this.isLoggedIn)) //Error message if non-logged in user tries to visit details for each language\r\n    {\r\n      alert(\"You do not have access to this object\");\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value; //Kanske fixa så att filtret bara funkar på namn och inte description, år osv?\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}\r\n","<body>\r\n    <mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n        <mat-grid-tile [colspan]=\"4\" [rowspan]=\"2\">Programming Languages</mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"4\" [rowspan]=\"6\">\r\n            <mat-card class=\"progCard\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Select a programming language! </mat-card-title>\r\n                    <div class=\"flexHeader\">\r\n                    <mat-form-field>\r\n                        <mat-label>Filter</mat-label>\r\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Java\" #input>\r\n                    </mat-form-field>\r\n                    <button mat-raised-button *ngIf=\"isLoggedIn\" routerLink=\"/Database-Submit\" routerLinkActive=\"activebutton\" aria-label=\"Go to submit page\">Add\r\n                        <mat-icon>add_box</mat-icon>\r\n                     </button>\r\n                    </div>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n\r\n\r\n                    <table mat-table [dataSource]=\"dataSource\">\r\n                        <ng-container matColumnDef=\"ProgrammingLanguages\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let language\" [routerLink]=\"['/details', language.id]\" (click)=\"verifyUser()\" routerLinkActive=\"active-link\">\r\n                                {{ language.Name }}\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                        <tr class=\"mat-row\" *matNoDataRow>\r\n                            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n                        </tr>\r\n\r\n                    </table>\r\n                </mat-card-content>\r\n\r\n            </mat-card>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</body>","import { emitDistinctChangesOnlyDefaultValue } from '@angular/compiler/src/core';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private afAuth: AngularFireAuth) { }\r\n\r\n  login(email: string, password: string){\r\n    return new Promise((reseolve, reject) => {\r\n      this.afAuth.signInWithEmailAndPassword(email, password)\r\n      .then(userInfo => reseolve(userInfo), error => reject(error))\r\n    });\r\n  }\r\n\r\n  logOut(){\r\n    this.afAuth.signOut();\r\n  }\r\n\r\n  getAuth(){\r\n    return this.afAuth.authState.pipe(map(auth => auth));\r\n  }\r\n\r\n}\r\n","<body>\r\n    <mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n        <mat-grid-tile [colspan]=\"4\" [rowspan]=\"2\">Home</mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"4\" [rowspan]=\"6\">\r\n            <mat-card class=\"progCard\">\r\n                <mat-card-header>\r\n                    <mat-card-title>\r\n                        Details\r\n                    </mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <mat-list *ngIf=\"language\">\r\n                        <mat-list-item class=\"test\"> Name: {{ language.Name }} </mat-list-item>\r\n                        <mat-list-item class=\"test\"> Founder: {{ language.Founder }} </mat-list-item>\r\n                        <mat-list-item class=\"test\"> Founded: {{ language.Founded }} </mat-list-item>\r\n                        <mat-list-item class=\"test\"> Description: {{ language.Description }} </mat-list-item>\r\n                    </mat-list>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button (click)=\"goBack()\" mat-button>Back</button>\r\n                    <button (click)=\"remove()\" mat-button>Remove from database</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProgrammingServiceService } from '../../services/programming-service.service';\r\nimport { CProgLanguages } from 'src/model/CProgLanguages';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\n\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  language: CProgLanguages;\r\n\r\n  id = this.route.snapshot.paramMap.get('id');\r\n  constructor(private route: ActivatedRoute, private languageService: ProgrammingServiceService) {\r\n\r\n  }\r\n\r\n  remove() {\r\n    this.languageService.remove(this.id);\r\n  }\r\n  ngOnInit(): void {\r\n\r\n    this.languageService.getLanguage(this.id).subscribe(j => this.language = j);\r\n\r\n  }\r\n \r\n\r\n  goBack() {\r\n    window.history.back();\r\n  }\r\n\r\n\r\n}","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Programming!</title>\r\n</head>\r\n\r\n\r\n<body id=\"body\">\r\n    <div class=\"topwrapper\">\r\n        <div class=\"topnav\">\r\n            <nav mat-tab-nav-bar>\r\n                <a mat-tab-link *ngFor=\"let link of links\" [routerLink]=\"link.link\" routerLinkActive=\"activebutton\">{{link.label}}</a>\r\n            </nav>\r\n\r\n            <!-- <mat-tab routerLink=\"/Welcome-Page\" routerLinkActive=\"activebutton\" label=\"Home\"></mat-tab>\r\n              <mat-tab routerLink=\"/Programming-Languages\" routerLinkActive=\"activebutton\" label=\"Programming-Languages\"></mat-tab>\r\n              <mat-tab routerLink=\"/Frameworks\" routerLinkActive=\"activebutton\" label=\"Frameworks\"></mat-tab>\r\n              <mat-tab routerLink=\"/Database-Submit\" routerLinkActive=\"activebutton\" label=\"Submit to database\"></mat-tab>-->\r\n\r\n        </div>\r\n        <div class=\"loginform\">\r\n            <div class=\"loginDiv\" *ngIf=\"isLoggedIn\">\r\n                <p class=\"loggedInAs\">Logged in as: {{ loggedInUser }}</p>\r\n                <mat-icon routerLink=\"/Profile\" routerLinkActive=\"activebutton\" svgIcon=\"profile\" aria-hidden=\"false\" aria-label=\"Profile page SVG icon\"></mat-icon>\r\n            </div>\r\n            <button mat-button>\r\n                    <p *ngIf=\"!isLoggedIn\" (click)=\"openForm()\">Login</p>\r\n                    <p *ngIf=\"isLoggedIn\" (click)=\"onLogoutClick()\" routerLink=\"/Welcome-Page\" routerLinkActive=\"activebutton\">logout</p>\r\n                </button>\r\n            <app-login id=\"hiddenlogin\"></app-login>\r\n        </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { AddLanguageComponent } from './components/add-language/add-language.component';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { GuardService } from './services/guard-service.service';\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  \r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Programming Languages';\r\n  isLoggedIn: boolean;\r\n  loggedInUser: string;\r\n  links: any[];\r\n  activeLinkIndex = -1;\r\n  \r\n\r\n  constructor(private authService: LoginService, private router: Router, private iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\r\n\r\n    \r\n    iconRegistry.addSvgIcon('profile', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/user.svg'));\r\n  \r\n   \r\n   }\r\n   showLinks(){\r\n     if(this.isLoggedIn){\r\n       this.links = [\r\n        {\r\n            label: 'Home',\r\n            link: './Welcome-Page',\r\n            index: 0\r\n        }, {\r\n            label: 'Programming-Languages',\r\n            link: './Programming-Languages',\r\n            index: 1\r\n        }, {\r\n            label: 'IDEs',\r\n            link: './Frameworks',\r\n            index: 2\r\n        }, \r\n        {\r\n          label: 'Database-Submit',\r\n          link: './Database-Submit',\r\n          index: 3\r\n      },\r\n    ];\r\n     } else {\r\n      this.links = [\r\n        {\r\n            label: 'Home',\r\n            link: './Welcome-Page',\r\n            index: 0\r\n        },  {\r\n            label: 'IDEs',\r\n            link: './Frameworks',\r\n            index: 2\r\n        }, \r\n    ];\r\n     }\r\n   }\r\n  \r\n  ngOnInit() {\r\n    this.authService.getAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.isLoggedIn = true;\r\n        this.loggedInUser = auth.email;\r\n        this.showLinks();\r\n      } else {\r\n        this.isLoggedIn = false;\r\n        this.showLinks();\r\n      }\r\n    });\r\n\r\n\r\n    this.router.events.subscribe((res) => {\r\n      this.activeLinkIndex = this.links.indexOf(this.links.find(tab => tab.link === '.' + this.router.url));\r\n  });\r\n\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logOut();\r\n    this.isLoggedIn = false;\r\n    this.showLinks();\r\n\r\n  }\r\n    \r\n\r\n  openForm() {\r\n    document.getElementById(\"hiddenLogin\").style.display = \"block\";   \r\n  }\r\n\r\n\r\n  closeForm() {\r\n    document.getElementById(\"hiddenLogin\").style.display = \"none\";\r\n  }\r\n}\r\n\r\n","<div class=\"form-popup\" id=\"hiddenLogin\">\r\n  <div class=\"form-wrapper\">\r\n    <form (submit)=\"onSubmit()\" class=\"form-container\">\r\n    \r\n      <label for=\"email\"><b>Email</b></label>\r\n      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter Email\" required>\r\n  \r\n      <label for=\"psw\"><b>Password</b></label>\r\n      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Enter Password\" required>\r\n  \r\n      <input type=\"submit\" value=\"Login\" class=\"btn\">\r\n      <button type=\"button\" class=\"btn cancel\" (click)=\"closeForm()\">Close</button>\r\n      <span *ngIf=\"error\">{{ error }}</span>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n \r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { transAnimation } from '../router-animation/route-animation';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  email: string;\r\n  password: string;\r\n  error: string;\r\n  isLoggedIn: boolean;\r\n  loggedInUser: string;\r\n\r\n  constructor(private authService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.authService.login(this.email, this.password)\r\n      .then(res => {\r\n        this.router.navigate(['/']);\r\n        document.getElementById(\"hiddenLogin\").style.display = \"none\";\r\n      })\r\n      .catch(err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n\r\n  openForm() {\r\n    document.getElementById(\"hiddenLogin\").style.display = \"block\";\r\n  }\r\n\r\n  closeForm() {\r\n    document.getElementById(\"hiddenLogin\").style.display = \"none\";\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuardService implements CanActivate {\r\n\r\n  constructor(private router: Router, private afAuth: AngularFireAuth) { }\r\n  canActivate(): Observable<boolean> {\r\n    return this.afAuth.authState.pipe(map(auth => {\r\n      if (!auth) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }));\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from \"@Angular/forms\";\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomepageComponent } from './components/welcomepage/welcomepage.component';\r\nimport { ProgramminglanguagesComponent } from './components/programminglanguages/programminglanguages.component';\r\nimport { ProfileComponent } from './components/profile/Profile.component'\r\nimport { AngularFireModule } from '@angular/fire'; \r\nimport { environment } from '../environments/environment'; \r\nimport { AngularFirestoreModule } from '@angular/fire/firestore'; \r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { DetailsComponent } from './components/details/details.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AddLanguageComponent } from './components/add-language/add-language.component';\r\nimport { GuardService } from './services/guard-service.service';\r\n\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCard, MatCardModule} from '@angular/material/card';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProjectOverviewComponent } from './components/project-overview/project-overview.component';\r\nimport { AddlanguagedialogComponent } from './components/addlanguagedialog/addlanguagedialog.component';\r\nimport { FrameworksComponent } from './components/frameworks/frameworks.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomepageComponent,\r\n    ProgramminglanguagesComponent,\r\n    DetailsComponent,\r\n    LoginComponent,\r\n    AddLanguageComponent,\r\n    ProfileComponent,\r\n    ProjectOverviewComponent,\r\n    AddlanguagedialogComponent,\r\n    FrameworksComponent,\r\n  ],\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatButtonModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      {path:'', redirectTo:'/Welcome-Page', pathMatch:'full'},\r\n      {path:'Welcome-Page', component:WelcomepageComponent},\r\n      {path:'Programming-Languages', component:ProgramminglanguagesComponent},\r\n      {path:'details/:id', component:DetailsComponent,  canActivate:[GuardService] },\r\n      {path:'Login', component:LoginComponent},\r\n      {path:'ProjectOverview', component:ProjectOverviewComponent},\r\n      {path:'Database-Submit', component:AddLanguageComponent, canActivate:[GuardService]},\r\n      {path:'Profile', component:ProfileComponent, canActivate:[GuardService]},\r\n      {path:'Frameworks', component:FrameworksComponent}\r\n\r\n    ]),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n  isLoggedIn: boolean;\r\n  loggedInUser: String;\r\n    constructor(private authService: LoginService, private app: AppComponent,  private router: Router) {\r\n   \r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n   \r\n    \r\n      this.authService.getAuth().subscribe(auth => {\r\n        if (auth) {\r\n          this.isLoggedIn = true;\r\n          this.loggedInUser = auth.email;\r\n          \r\n        } else {\r\n          this.isLoggedIn = false;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\r\n","<body>\r\n    <mat-grid-list cols=\"1\" rowHeight=\"100px\">\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\"><div>\r\n        <h1>{{loggedInUser}}</h1>\r\n    </div></mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"6\">\r\n        \r\n    </mat-grid-tile>\r\n</mat-grid-list>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@Angular/forms\";\r\nimport { AngularFirestore } from \"@angular/fire/firestore\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddlanguagedialogComponent } from '../addlanguagedialog/addlanguagedialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-language',\r\n  templateUrl: './add-language.component.html',\r\n  styleUrls: ['./add-language.component.css']\r\n})\r\nexport class AddLanguageComponent implements OnInit {\r\n  \r\n  durationInSeconds = 5;\r\n  language: any;\r\n  Name: String;\r\n\r\n  form = new FormGroup({\r\n    Name: new FormControl('', [Validators.required]),\r\n    Founder: new FormControl('', [Validators.required]),\r\n    Founded: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(4), Validators.pattern(\"^[0-9]*$\")]),\r\n    Description: new FormControl('', [Validators.required])\r\n  });\r\n\r\n  constructor(private firestore: AngularFirestore, private snackBar: MatSnackBar, private dialog: MatDialog, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(AddlanguagedialogComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result == true){\r\n        this.onSubmit();\r\n       \r\n      } else{\r\n        this.errorDialogInput();\r\n        \r\n      }\r\n    \r\n    });\r\n  }\r\n\r\n  errorDialogInput(){\r\n    this.snackBar.openFromComponent(SnackBarComponent, {\r\n      duration: this.durationInSeconds * 1000\r\n    }); \r\n  }\r\n\r\n  navigate(){\r\n    this.router.navigate(['/Programming-Languages' ]);  \r\n  }\r\n\r\n  verifyInput(): boolean{\r\n    if(this.form.valid){\r\n      return true;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.verifyInput()) {\r\n      this.firestore.collection('Languages').add({\r\n        Name: this.form.value.Name,\r\n        Founder: this.form.value.Founder,\r\n        Founded: this.form.value.Founded,\r\n        Description: this.form.value.Description\r\n      })\r\n        .then(res => {\r\n          console.log(res);\r\n          this.form.reset();\r\n          this.navigate();\r\n         \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n          this.form.reset();\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector:'snackbar',\r\n  templateUrl:'snackbar.html',\r\n  styles: [`\r\n  .snackbar-error {\r\n    color: hotpink;\r\n  }\r\n`],\r\n})\r\nexport class SnackBarComponent{\r\n\r\n}\r\n","<mat-grid-list cols=\"1\" rowHeight=\"100px\">\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\">\r\n\r\n        Database submission\r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"6\">\r\n        <mat-card class=\"progCard\">\r\n\r\n            <mat-card-content>\r\n                <form class=\"form\" [formGroup]=\"this.form\">\r\n\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <mat-label>Name of the language:</mat-label>\r\n                        <input matInput placeholder=\"Ex. Python\" formControlName=\"Name\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <mat-label>Name of the founder:</mat-label>\r\n                        <input matInput formControlName=\"Founder\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <mat-label>Year founded:</mat-label>\r\n                        <input matInput placeholder=\"Ex. 1998\" formControlName=\"Founded\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <mat-label>Provide a short description</mat-label>\r\n                        <textarea matInput formControlName=\"Description\"></textarea>\r\n                    </mat-form-field>\r\n\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <button (click)=\"openDialog()\" [disabled]=\"form.invalid\" mat-button>Submit</button>\r\n            </mat-card-actions>\r\n        </mat-card>","<span class=\"snackbar-error\">\r\n    It´s okey, go again! \r\n  </span>","import { Injectable } from '@angular/core';\r\nimport { CProgLanguages } from 'src/model/CProgLanguages';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProgrammingServiceService {\r\n\r\n  languages: Observable<any[]>;\r\n  detailsDoc: AngularFirestoreDocument<CProgLanguages>;\r\n  details: Observable<any>;\r\n  \r\n  constructor(private afs: AngularFirestore) {\r\n    this.languages = afs.collection('Languages').snapshotChanges().pipe(\r\n      map(j => j.map(\r\n      a => {\r\n      const data = a.payload.doc.data() as CProgLanguages;\r\n      const id = a.payload.doc.id;\r\n      return {id, ...data};\r\n      }\r\n    ))\r\n  );      \r\n}\r\nremove(id: string): void {\r\n  this.afs.doc('Languages/' + id).delete();\r\n}\r\n\r\ngetPlayer(): Observable<CProgLanguages[]> {\r\n  return this.languages;\r\n}\r\n\r\ngetLanguage(id: string): Observable<CProgLanguages> {\r\n    this.detailsDoc = this.afs.doc<CProgLanguages>(`Languages/${id}`);\r\n    this.details = this.detailsDoc.valueChanges();\r\n    return this.details;\r\n  }\r\n\r\n}\r\n","<body>\r\n    <!--\r\n    <div class=\"homepagetitle\">\r\n        <h1 class=\"title\">\r\n            Home\r\n        </h1>\r\n    </div>\r\n    <div class=\"WelcomeWrapper\">\r\n        <div class=\"firstwelcomediv\">\r\n\r\n            <h1>There are alot of programming languages and there are alot of history behind it all! <br><br> Press the\r\n                button below to recieve some nice reading!</h1>\r\n            <button (click)=\"toggleShow()\" class=\"buttons\">\r\n                <p>Show History</p>\r\n            </button>\r\n        </div>\r\n        <div *ngIf=\"isShown\" class=\"secondwelcomediv\">\r\n            <h2>Ever since the invention of Charles Babbage’s difference engine in 1822, computers have required a means\r\n                of instructing them to perform a specific task. This means is known as a programming language. Computer\r\n                languages were first composed\r\n                of a series of steps to wire a particular program; these morphed into a series of steps keyed into the\r\n                computer and then executed; later these languages acquired advanced features such as logical branching\r\n                and object orientation. The computer\r\n                languages of the last fifty years have come in two stages, the first major languages and the second\r\n                major languages, which are in use today. <br> <em>\r\n                    <h2 *ngIf=\"!isLoggedIn\">To see more details, you have to log in!</h2>\r\n                </em> </h2>\r\n        </div>\r\n    </div>-->\r\n\r\n    <mat-grid-list cols=\"1\" rowHeight=\"100px\">\r\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\">Home</mat-grid-tile>\r\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"6\">\r\n            <mat-card class=\"progCard\">\r\n                <mat-card-header>\r\n                    <mat-card-title>There are alot of programming languages and there are alot of history behind it all! </mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <p>\r\n                        Press the button below to recieve some nice reading!\r\n                    </p>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button (click)=\"toggleShow()\" mat-button>Show History</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card id=\"secondCard\" class=\"progCard\">\r\n                <mat-card-header>\r\n                    <mat-card-title>History</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <p>\r\n                        Ever since the invention of Charles Babbage’s difference engine in 1822, computers have required a means of instructing them to perform a specific task. This means is known as a programming language. Computer languages were first composed of a series\r\n                        of steps to wire a particular program; these morphed into a series of steps keyed into the computer and then executed; later these languages acquired advanced features such as logical branching and object orientation. The computer\r\n                        languages of the last fifty years have come in two stages, the first major languages and the second major languages, which are in use today.\r\n                    </p>\r\n                    <p>\r\n                        <br> While being logged you´ll also be able to submit new languages, read about them aswell as removing the ones already there.\r\n                    </p>\r\n                    <h2 *ngIf=\"!isLoggedIn\">To see more details, you have to log in!\r\n                    </h2>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-welcomepage',\r\n  templateUrl: './welcomepage.component.html',\r\n  styleUrls: ['./welcomepage.component.css']\r\n})\r\nexport class WelcomepageComponent implements OnInit {\r\n\r\n  isShown: boolean = false;\r\n  isLoggedIn: boolean;\r\n  loggedInUser: string;\r\n  \r\n  constructor(private atService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.atService.getAuth().subscribe(auth => {\r\n      if(auth) {\r\n        this.isLoggedIn = true;\r\n        this.loggedInUser = auth.email;\r\n        \r\n        \r\n      } else {\r\n        this.isLoggedIn = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  logoutClick(){\r\n    this.atService.logOut();\r\n  }\r\n\r\n  toggleShow() {\r\n    if (this.isShown)\r\n    {\r\n      document.getElementById(\"secondCard\").style.visibility = \"hidden\";\r\n      \r\n    }\r\n    else{\r\n      document.getElementById(\"secondCard\").style.visibility = \"visible\";\r\n    }\r\n    this.isShown = ! this.isShown; \r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DetailsComponent } from './components/details/details.component';\r\n\r\nconst routes: Routes = [\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}